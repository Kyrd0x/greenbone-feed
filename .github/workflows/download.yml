name: Download and Release Latest Greenbone Feed

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *'  # Every day at 03:00 UTC

jobs:
  download-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y rsync zip

      - name: Determine latest version and mod date
        id: get-latest
        run: |
          FEED_LIST=$(rsync --list-only rsync://feed.community.greenbone.net/community/vulnerability-feed/)
          FEED_INFO=$(echo "$FEED_LIST" | grep -E '^[dlrwx-]+\s+[0-9,]+\s+[0-9]{4}/[0-9]{2}/[0-9]{2}\s+[0-9]{2}:[0-9]{2}:[0-9]{2}\s+[0-9]+\.[0-9]+$')
          LATEST_LINE=$(echo "$FEED_INFO" | sort -k6,7 | tail -n1)
          echo "LATEST_LINE: $LATEST_LINE"

          VERSION=$(echo "$LATEST_LINE" | awk '{print $NF}')
          MOD_DATE=$(echo "$LATEST_LINE" | awk '{print $6}' | tr '/' '-')  # e.g., 2025-06-17

          echo "Greenbone version: $VERSION"
          echo "Greenbone mod date: $MOD_DATE"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "mod_day=$MOD_DATE" >> $GITHUB_OUTPUT

      - name: Download Greenbone Feed
        run: |
          VERSION=${{ steps.get-latest.outputs.version }}
          mkdir -p vulnerability-feed/scap-data
          mkdir -p vulnerability-feed/cert-data
          mkdir -p vulnerability-feed/vt-data/notus
          mkdir -p vulnerability-feed/vt-data/nasl
          mkdir -p data-feed

          rsync -av rsync://feed.community.greenbone.net/community/vulnerability-feed/$VERSION/scap-data/ vulnerability-feed/scap-data/
          rsync -av rsync://feed.community.greenbone.net/community/vulnerability-feed/$VERSION/cert-data/ vulnerability-feed/cert-data/
          rsync -av rsync://feed.community.greenbone.net/community/vulnerability-feed/$VERSION/vt-data/notus/ vulnerability-feed/vt-data/notus/
          rsync -av rsync://feed.community.greenbone.net/community/vulnerability-feed/$VERSION/vt-data/nasl/ vulnerability-feed/vt-data/nasl/
          rsync -av rsync://feed.community.greenbone.net/community/data-feed/$VERSION/ data-feed/

      - name: Zip the feed
        run: zip -r greenbone-feed.zip vulnerability-feed/ data-feed/


      - name: Get latest release tag
        id: latest_release
        run: |
          RELEASE_DATE=$(gh release list --limit 1 | awk '{print $1}' | grep -oE '[0-9]{4}-[0-9]{2}-[0-9]{2}')
          echo "Latest release date: $RELEASE_DATE"
          echo "release_day=$RELEASE_DATE" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate tag
        id: vars
        run: |
          echo "tag=${{ steps.get-latest.outputs.version }}-${{ steps.get-latest.outputs.mod_day }}" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: steps.get-latest.outputs.mod_day != steps.latest_release.outputs.release_day
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: Greenbone Feed ${{ steps.vars.outputs.tag }}
          files: greenbone-feed.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}