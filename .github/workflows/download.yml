name: Download and Release Latest Greenbone Feed

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *'  # Every day at 03:00 UTC

jobs:
  download-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y rsync zip

      - name: Determine latest version
        id: get-latest
        run: |
          # Get version directories from vulnerability-feed
          DEBUG=$(rsync --list-only rsync://feed.community.greenbone.net/community/vulnerability-feed/)
          echo "DEBUG: $DEBUG"
          VERSIONS=$(rsync --list-only rsync://feed.community.greenbone.net/community/vulnerability-feed/ | awk '{print $NF}' | grep -E '^[0-9]+\.[0-9]+/?$' | sed 's:/$::')
          LATEST=$(echo "$VERSIONS" | sort -V | tail -n1)
          echo "Latest version: $LATEST"
          echo "latest=$LATEST" >> $GITHUB_OUTPUT

      - name: Download Greenbone Feed
        run: |
          VERSION=${{ steps.get-latest.outputs.latest }}
          mkdir -p vulnerability-feed/scap-data
          mkdir -p vulnerability-feed/cert-data
          mkdir -p vulnerability-feed/vt-data/notus
          mkdir -p vulnerability-feed/vt-data/nasl
          mkdir -p data-feed

          rsync -av rsync://feed.community.greenbone.net/community/vulnerability-feed/$VERSION/scap-data/ vulnerability-feed/scap-data/
          rsync -av rsync://feed.community.greenbone.net/community/vulnerability-feed/$VERSION/cert-data/ vulnerability-feed/cert-data/
          rsync -av rsync://feed.community.greenbone.net/community/vulnerability-feed/$VERSION/vt-data/notus/ vulnerability-feed/vt-data/notus/
          rsync -av rsync://feed.community.greenbone.net/community/vulnerability-feed/$VERSION/vt-data/nasl/ vulnerability-feed/vt-data/nasl/
          rsync -av rsync://feed.community.greenbone.net/community/data-feed/$VERSION/ data-feed/

      - name: Zip the feed
        run: zip -r greenbone-feed.zip vulnerability-feed/ data-feed/

      - name: Generate tag
        id: vars
        run: echo "tag=${{ steps.get-latest.outputs.latest }}-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Compute current ZIP hash
        id: hash
        run: |
          HASH=$(sha256sum greenbone-feed.zip | awk '{print $1}')
          echo "Current hash: $HASH"
          echo "hash=$HASH" >> $GITHUB_OUTPUT

      - name: Compare with latest release
        id: compare
        run: |
          gh release download --pattern "greenbone-feed.zip" -D old-release || echo "No previous release"
          
          if [ -f old-release/greenbone-feed.zip ]; then
            OLD_HASH=$(sha256sum old-release/greenbone-feed.zip | awk '{print $1}')
            echo "Previous hash: $OLD_HASH"
            echo "old_hash=$OLD_HASH" >> $GITHUB_OUTPUT
          else
            echo "No old hash"
            echo "old_hash=none" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        if: steps.compare.outputs.old_hash != steps.hash.outputs.hash
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.vars.outputs.tag }}
          name: Greenbone Feed ${{ steps.vars.outputs.tag }}
          files: greenbone-feed.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}