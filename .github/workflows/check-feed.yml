name: Check Greenbone Feed Update

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 3 * * *'  # Every day at 03:00 UTC
  
jobs:
  check-update:
    runs-on: ubuntu-latest

    steps:
      - name: Install jq and rsync
        run: sudo apt-get update && sudo apt-get install -y rsync jq

      - name: Determine latest version and mod date
        id: get-latest
        run: |
          FEED_LIST=$(rsync --list-only rsync://feed.community.greenbone.net/community/vulnerability-feed/)
          FEED_INFO=$(echo "$FEED_LIST" | grep -E '^[dlrwx-]+\s+[0-9,]+\s+[0-9]{4}/[0-9]{2}/[0-9]{2}')
          LATEST_LINE=$(echo "$FEED_INFO" | sort -k6,7 | tail -n1)

          VERSION=$(echo "$LATEST_LINE" | awk '{print $NF}')
          MOD_DATE=$(echo "$LATEST_LINE" | awk '{print $(NF-2)}' | tr '/' '-')

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "mod_day=$MOD_DATE" >> $GITHUB_OUTPUT



      - name: Get latest release tag
        id: latest_release
        run: |
          TAG=$(gh release list --limit 1 --repo Kyrd0x/greenbone-feed | awk '{print $3}')
          echo "TAG: $TAG"
          if [[ "$TAG" =~ ([0-9]{4}-[0-9]{2}-[0-9]{2}) ]]; then
            RELEASE_DATE="${BASH_REMATCH[1]}"
            echo "release_day=$RELEASE_DATE" >> $GITHUB_OUTPUT
            echo "Latest release date: $RELEASE_DATE"
          else
            echo "No valid release date found â€” assuming first run"
            echo "release_day=none" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger release workflow if needed
        if: ${{ steps.get-latest.outputs.mod_day != steps.latest_release.outputs.release_day }}
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: greenbone-release-request
          client-payload: '{"version": "${{ steps.get-latest.outputs.version }}", "mod_day": "${{ steps.get-latest.outputs.mod_day }}"}'